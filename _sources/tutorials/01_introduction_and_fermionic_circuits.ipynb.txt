{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "5beda1bd",
   "metadata": {},
   "source": [
    "# Introduction & Fermionic Circuits\n",
    "\n",
    "In digital quantum computing, the fundamental unit of information is typically an addressable two-level quantum system called a qubit. Within the circuit model, each qubit is assigned a wire in the circuit. After _initialization_ in a well-defined state (e.g. the ground state 0), gates applied to these wires describe an _evolution_ of the state under a sequence of unitary operations. A _measurement_ on a wire then projects the corresponding unit of information onto one of its internal states (0 or 1 for qubits).\n",
    "\n",
    "Quantum simulation architectures based on cold atoms have been vastly explored for the simulation of condensed matter systems in the last two decades. [1] Their experimental control has advanced to a point where they now offer varying degrees of programmability making them strong candidates for a novel kind of quantum information processor.\n",
    "Similar to the qubit circuits described above, experiments run on cold atomic quantum simulators are also commonly described by an _initialization_ in some easy-to-prepare state, a subsequent _evolution_ of the state under programmable unitary operations and finally a _measurement_ yielding information about the quantum state of the atoms such as location, momentum or spin. \n",
    "\n",
    "Due to these similarities between the qubits and cold atomic quantum systems we can abstract quantum computations and simulations run on cold atomic systems in quantum circuits where the wires represent the internal degrees of freedom of the atoms which are accessed by the measurement. \n",
    "\n",
    "Qiskit's cold atom module explores such circuit-based descriptions of cold atomic experiments, leveraging the existing Qiskit control stack and building upon functionality such as circuits, backends, gates, providers etc.  \n",
    "\n",
    "Specifically, this module enables two different settings:  \n",
    "\n",
    "1.  A \"fermionic\" setting where the individual units of information are the occupations of fermionic modes realized by trapped fermionic atoms as described in this tutorial. \n",
    "2. A \\\"spin\\\" setting where the individual units of information are orientations of long spins as realized by trapped Bose-Einstein-Condensates. This is introduced in the [spin circuits tutorial](./02_spin_circuits.ipynb)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "304f8244",
   "metadata": {},
   "source": [
    "## Fermionic setting\n",
    "\n",
    "In a fermionic setting, the wires of a quantum circuit describe the occupations of individual fermionic modes. Due to the Pauli exclusion principle, a fermionic mode can either be empty, i.e. in the \"vacuum state\" $\\left| 0 \\right>$ or occupied $\\left| 1 \\right>$. However, no two particles can occupy the same mode. We assign one wire to each fermionic mode in the quantum circuit describing such systems.\n",
    "\n",
    "Before applying gates to this fermionic register, we need to initialize some modes with particles, which is done with a `load` instruction. Importing the `qiskit_cold_atom.fermions` module will add this instruction to the `QuantumCircuit` class."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1ebfe70b",
   "metadata": {},
   "outputs": [],
   "source": [
    "from qiskit_cold_atom.fermions import FermionSimulator\n",
    "\n",
    "# initialize the generic fermionic simulator backend\n",
    "backend = FermionSimulator()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "2b635ce0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 206.997x264.88 with 1 Axes>"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from qiskit import QuantumCircuit\n",
    "\n",
    "circ1 = QuantumCircuit(4)  # Create a quantum circuit describing four fermionic modes.\n",
    "\n",
    "circ1.load_fermions([1, 2])  # Load fermions into modes 1 and 2.\n",
    "\n",
    "circ1.draw(output='mpl')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6ddfa98",
   "metadata": {},
   "source": [
    "A measurement will yield the occupations of each wire. Let's run the circuit on the `FermionSimulator` backend and confirm this. Calling `backend.run()` will create an `AerJob` object from qiskit-aer which comes with the same functionality to handle jobs familiar from the Aer simulation backends, such as a `.result()` method to retrieve the results. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1554f160",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'0110': 1000}\n"
     ]
    }
   ],
   "source": [
    "circ1.measure_all()\n",
    "\n",
    "job = backend.run(circ1)  # defaults to 1000 shots taken\n",
    "\n",
    "print(job.result().get_counts())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "000aa9a9",
   "metadata": {},
   "source": [
    "A fermionic register can also be created directly from a list of initial occupations:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "901334f8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 221.22x204.68 with 1 Axes>"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "circ2 = backend.initialize_circuit([1, 0, 1])\n",
    "\n",
    "circ2.draw(output='mpl')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f4ceeafa",
   "metadata": {},
   "source": [
    "Observe that the first quantum circuit has a register named `q` while the second circuit has a register named `fer_mode` to emphasize that the wires are fermionic in nature. This does not affect the instructions that can be added to a circuit and reminds us of the different nature of the wires. Circuits with registers labeled `fer_mode` can be conveniently obtained from the cold atom backend instances using the `initialize_circuit` method."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d45c1471",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "First circuit's register: [QuantumRegister(4, 'q')]\n",
      "Second circuit's register: [QuantumRegister(3, 'fer_mode')]\n"
     ]
    }
   ],
   "source": [
    "print(f\"First circuit's register: {circ1.qregs}\")\n",
    "print(f\"Second circuit's register: {circ2.qregs}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "363cc277",
   "metadata": {},
   "source": [
    "## Fermionic Gates\n",
    "\n",
    "Quantum gates define the unitary operations that are carried out on the system. The gate unitary $U$ can be uniquely identified by the hermitian Hamiltonian $H$ that generates the evolution of the state (see [Qiskit textbook](https://qiskit.org/textbook/ch-gates/proving-universality.html#2.2-Unitary-and-Hermitian-matrices-)) as $U = e^{-i H}$.\n",
    "The dynamics of cold atomic quantum simulators is commonly described by the Hamiltonian implemented by the system. The Qiskit Cold Atom module therefore defines fermionic gates using their generating Hamiltonians.\n",
    "\n",
    "As a formal language to describe fermionic Hamiltonians, we utilize the \n",
    "`FermionicOp` from Qiskit Nature. Gates are then defined as instances or subclasses of the `FermionicGate` class which inherits from Qiskit's original `Gate` class. \n",
    "\n",
    "In order for the `FermionSimulator` to run a circuit, each gate of the circuit needs to have its generating Hamiltonian given as a `FermionicOp`.  \n",
    "\n",
    "As a first example, let's define a gate $U_{\\text{swap}} = e^{-i H_{\\text{swap}}}$ which takes one particle from mode $i$ to another mode $j$ (and vice versa). In second quantization, the generating Hamiltonian is given as \n",
    "$$ H_{\\text{swap}} = \\frac{\\pi}{2} (f^\\dagger_{i} f_{j} + f^\\dagger_{j} f_{i}) $$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b1e95045",
   "metadata": {},
   "outputs": [],
   "source": [
    "from qiskit_nature.operators.second_quantization import FermionicOp\n",
    "import numpy as np\n",
    "\n",
    "# define the Hamiltonian as a FermionicOp\n",
    "H_swap = np.pi/2 * FermionicOp([(\"+_0 -_1\", 1), (\"-_0 +_1\", -1)], register_length=2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1c1feaeb",
   "metadata": {},
   "source": [
    "For details on the syntax of how to define a `FermionicOp` please see the [FermionicOp documentation](https://qiskit.org/documentation/nature/stubs/qiskit_nature.operators.second_quantization.FermionicOp.html#qiskit_nature.operators.second_quantization.FermionicOp)\n",
    "\n",
    "We can now define the fermionic gate:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "1a0f48c5",
   "metadata": {},
   "outputs": [],
   "source": [
    "from qiskit_cold_atom.fermions import FermionicGate\n",
    "\n",
    "swap_fermions = FermionicGate(name=\"swap_fermion\", num_modes=2, generator=H_swap)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d96abc4c",
   "metadata": {},
   "source": [
    "Let's use this gate to define and run a circuit on the simulator:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "22c29095",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 706.736x260.064 with 1 Axes>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "circ = backend.initialize_circuit([1, 0, 1, 0])\n",
    "\n",
    "circ.append(swap_fermions, qargs=[0, 1])\n",
    "circ.append(swap_fermions, qargs=[2, 3])\n",
    "circ.append(swap_fermions, qargs=[1, 2])\n",
    "\n",
    "circ.measure_all()\n",
    "circ.draw(output='mpl', scale=0.8)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "d59f3c9e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'0011': 1000}\n"
     ]
    }
   ],
   "source": [
    "job = backend.run(circ)\n",
    "\n",
    "print(job.result().get_counts())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8df93cea",
   "metadata": {},
   "source": [
    "The fermions initialized at positions 0 and 2 got moved to position 2 and 3. Therefore, the outcome '0011' is always measured at each shot."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6be328de",
   "metadata": {},
   "source": [
    "### Superposition\n",
    "\n",
    "With the SWAP gate only, the system will always stay in a computational basis state. To create a superposition we define a similar gate which lets a particle tunnel from mode $i$ to mode $j$. This is achieved by applying the same Hamiltonian $H_{\\text{swap}}$ for half the time, i.e. with a prefactor half as large.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "aa3fa92b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# define a gate which will create superposition in the circuit\n",
    "split_fermions = FermionicGate(name=\"split_fermion\", num_modes=2, generator=H_swap/2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "8b710f09",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 658.576x211.904 with 1 Axes>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "qc_sup = backend.initialize_circuit([1, 0, 0])\n",
    "\n",
    "qc_sup.append(split_fermions, qargs=[0, 1])\n",
    "qc_sup.append(swap_fermions, qargs=[1, 2])\n",
    "\n",
    "qc_sup.measure_all()\n",
    "qc_sup.draw(output='mpl', scale=0.8)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "f0a6fe2f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x216 with 1 Axes>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from qiskit.visualization import plot_histogram\n",
    "\n",
    "job_sup = backend.run(qc_sup)\n",
    "\n",
    "plot_histogram(job_sup.result().get_counts(), figsize=(5, 3))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c32fc0a0",
   "metadata": {},
   "source": [
    "We now see that the single particle in the register is found either in mode 0 or mode 2 with equal probability."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3e0f6d27",
   "metadata": {},
   "source": [
    "## The fermionic simulator backend\n",
    "\n",
    "We have already seen above how to use the `FermionSimulator` to simulate measurements of the occupation of the fermionic modes. Internally, this backend simulates the evolution of the circuit by exact diagonalization and therefore also has access to the statevector and unitary of the system in the familiar way of `result.get_statevector()` and `result.get_unitary()`. If there is a final measurement in the circuit, the returned state and unitary of the circuit are those just prior to measurement."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "8e52792e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "counts : {'1010': 1, '0011': 1, '1100': 5, '0101': 3}\n",
      "\n",
      "memory : ['0011', '1010', '0101', '1100', '1100', '0101', '0101', '1100', '1100', '1100']\n",
      "\n",
      "statevector : [0.-0.5j 0.+0.5j 0.+0.j  0.+0.j  0.+0.5j 0.-0.5j]\n",
      "\n",
      "circuit unitary : \n",
      " [[ 0. +0.j   0.5+0.j   0. +0.5j  0. -0.5j  0.5+0.j   0. +0.j ]\n",
      " [ 0. +0.j   0.5+0.j   0. +0.5j  0. +0.5j -0.5+0.j   0. +0.j ]\n",
      " [ 0. +0.j   0. +0.j   0. +0.j   0. +0.j   0. +0.j   0. +1.j ]\n",
      " [ 0. -1.j   0. +0.j   0. +0.j   0. +0.j   0. +0.j   0. +0.j ]\n",
      " [ 0. +0.j  -0.5+0.j   0. +0.5j  0. +0.5j  0.5+0.j   0. +0.j ]\n",
      " [ 0. +0.j  -0.5+0.j   0. +0.5j  0. -0.5j -0.5+0.j   0. +0.j ]]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1064.02x325.08 with 1 Axes>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "qc = backend.initialize_circuit([1, 0, 0, 1])\n",
    "\n",
    "qc.append(split_fermions, qargs=[0, 1])\n",
    "qc.append(swap_fermions, qargs=[2, 3])\n",
    "qc.append(swap_fermions, qargs=[0, 1])\n",
    "qc.append(split_fermions, qargs=[2, 3])\n",
    "qc.append(swap_fermions, qargs=[0, 2])\n",
    "\n",
    "qc.measure_all()\n",
    "\n",
    "job = backend.run(qc, shots = 10, seed=1234)\n",
    "\n",
    "# access the counts\n",
    "print(\"counts :\", job.result().get_counts())\n",
    "\n",
    "# access the memory of individual outcomes\n",
    "print(\"\\nmemory :\", job.result().get_memory())\n",
    "\n",
    "# access the statevector \n",
    "print(\"\\nstatevector :\", job.result().get_statevector())\n",
    "\n",
    "# accedd the unitary\n",
    "print(\"\\ncircuit unitary : \\n\", job.result().get_unitary())\n",
    "\n",
    "qc.draw(output='mpl')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c9847181",
   "metadata": {},
   "source": [
    "Note that the statevector and unitary are defined in a Hilbert space of dimension six. This is because the simulator checks for the conservation of the total number of particles under the applied gates. If all gates conserve the total particle number, the simulation will only be carried out in the relevant subspace. In order to see which index in this basis belongs to which state, the basis of the simulation of a circuits can be accessed as:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "deeade90",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " 0.   |0, 0, 1, 1>\n",
      " 1.   |0, 1, 0, 1>\n",
      " 2.   |0, 1, 1, 0>\n",
      " 3.   |1, 0, 0, 1>\n",
      " 4.   |1, 0, 1, 0>\n",
      " 5.   |1, 1, 0, 0>\n"
     ]
    }
   ],
   "source": [
    "print(backend.get_basis(qc))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ab4ff80c",
   "metadata": {},
   "source": [
    "### Measuring observables\n",
    "\n",
    "The fermionic backends come with a method to sample the expectation value of observables which are diagonal in the occupation number basis. \n",
    "Like the gate Hamiltonians, these observables are given as a `FermionicOp`.\n",
    "\n",
    "For example, we can measure the correlation of the occupations of two sites in the above circuit:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "4af1fd5f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.484]\n"
     ]
    }
   ],
   "source": [
    "corr = FermionicOp(\"NINI\") + FermionicOp(\"EIEI\")\n",
    "\n",
    "exp_val = backend.measure_observable_expectation(qc, observable=corr, shots=1000)\n",
    "\n",
    "print(exp_val)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "50133e51",
   "metadata": {},
   "source": [
    "### Further remarks\n",
    "\n",
    "The `FermionSimulator` is a general simulator backend in the sense that it accepts any `FermionicGate` with a well-defined fermionic generator. Similar to the `qasm_simulator` for qubits, there are no coupling maps or further restrictions posed on the applicable gates. \n",
    "\n",
    "To see how fermionic circuits can describe a concrete experimental system of ultracold fermionic atoms with the gateset and coupling map of a real device please see the [fermionic tweezer hardware tutorial](./03_fermionic_tweezer_hardware.ipynb)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ed9a2bfc",
   "metadata": {},
   "source": [
    "## References\n",
    "[1] Gross, Christian and Bloch, Immanuel *Quantum simulations with ultracold atoms in optical lattices*, Science, 357, 995-1001, 2017"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "0e22aa30",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<h3>Version Information</h3><table><tr><th>Qiskit Software</th><th>Version</th></tr><tr><td><code>qiskit-terra</code></td><td>0.18.2</td></tr><tr><td><code>qiskit-aer</code></td><td>0.9.0</td></tr><tr><td><code>qiskit-ignis</code></td><td>0.6.0</td></tr><tr><td><code>qiskit-ibmq-provider</code></td><td>0.16.0</td></tr><tr><td><code>qiskit-aqua</code></td><td>0.9.5</td></tr><tr><td><code>qiskit</code></td><td>0.30.0</td></tr><tr><td><code>qiskit-nature</code></td><td>0.2.1</td></tr><tr><td><code>qiskit-optimization</code></td><td>0.1.0</td></tr><tr><th>System information</th></tr><tr><td>Python</td><td>3.8.5 (default, Sep  4 2020, 07:30:14) \n",
       "[GCC 7.3.0]</td></tr><tr><td>OS</td><td>Linux</td></tr><tr><td>CPUs</td><td>4</td></tr><tr><td>Memory (Gb)</td><td>15.525524139404297</td></tr><tr><td colspan='2'>Thu Sep 30 13:50:12 2021 CEST</td></tr></table>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div style='width: 100%; background-color:#d5d9e0;padding-left: 10px; padding-bottom: 10px; padding-right: 10px; padding-top: 5px'><h3>This code is a part of Qiskit</h3><p>&copy; Copyright IBM 2017, 2021.</p><p>This code is licensed under the Apache License, Version 2.0. You may<br>obtain a copy of this license in the LICENSE.txt file in the root directory<br> of this source tree or at http://www.apache.org/licenses/LICENSE-2.0.<p>Any modifications or derivative works of this code must retain this<br>copyright notice, and modified files need to carry a notice indicating<br>that they have been altered from the originals.</p></div>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import qiskit.tools.jupyter\n",
    "%qiskit_version_table\n",
    "%qiskit_copyright"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
